name: Build

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 pytest
          pip install -r requirements.txt
      - name: Format with black
        run: |
          black . --check
      - name: Lint with flake8
        run: |
          flake8 . --ignore=E203 --count --show-source --statistics --max-line-length=90
      - name: Test with pytest
        run: |
          pytest
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check for version bump
        if: ${{ startsWith(github.head_ref, 'release') }}
        run: |
          VERSION=$(echo -n $(git diff origin/${{ github.base_ref }} -G '__version__' app_store_scraper/__version__.py))
          VERSION=$(echo "$VERSION" | sed -E "s/.*\+__version__.*([0-9]+\.[0-9]+\.[0-9]+).+/\1/")
          if [ "$VERSION" = "" ]; then
            echo "Bump __version__ for release"
            exit 1
          else
            echo "Version: $VERSION"
            exit 0
          fi
      - name: Create tag
        if: github.ref == 'refs/heads/master'
        run: |
          VERSION=$(echo -n $(git diff HEAD^1 -G '__version__' app_store_scraper/__version__.py))
          VERSION=$(echo "$VERSION" | sed -E "s/.*\+__version__.*([0-9]+\.[0-9]+\.[0-9]+).+/\1/")
          if [ "$VERSION" != "" ]; then
            echo "Create and push v$VERSION tag"
            git tag v"$VERSION"
            git push origin v"$VERSION"
          fi
